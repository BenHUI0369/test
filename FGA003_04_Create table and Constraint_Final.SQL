--Drop all table
DROP TABLE COMM_REQUEST_HANDLE;
DROP TABLE COMM_PAYMENT;
DROP TABLE COMM_ADMISSION;
DROP TABLE COMM_SER_REQUEST;
DROP TABLE COMM_APPLICATION;
DROP TABLE COMM_COURSE;
DROP TABLE COMM_PROGRAM;
DROP TABLE COMM_USER;
DROP TABLE COMM_STAFF;
DROP TABLE COMM_COLLEGE;
DROP TABLE COMM_LOCATION;

--Create table COMM_LOCATION
CREATE TABLE COMM_LOCATION
(LOCATION VARCHAR2(20),
CONSTRAINT CL_LOCATION_PK PRIMARY KEY (LOCATION)
);

--Create table COMM_COLLEGE
CREATE TABLE COMM_COLLEGE
(COLLEGE_ID NUMBER(5),
COLEGE_NAME VARCHAR2(50),
LOCATION VARCHAR2(20),
PHONE VARCHAR2(12),
EMAIL VARCHAR2(50) NOT NULL,
CONSTRAINT CCL_CID_PK PRIMARY KEY (COLLEGE_ID),
CONSTRAINT CCL_LOCATION_FK FOREIGN KEY (LOCATION) REFERENCES COMM_LOCATION (LOCATION)
);

--Create table COMM_STAFF
CREATE TABLE COMM_STAFF
(STAFF_ID NUMBER(6),
FNAME VARCHAR2(50)NOT NULL,
LNAME VARCHAR2(50)NOT NULL,
BIRTH DATE,
GEN CHAR(2),
ADDRESS VARCHAR2(50),
PHONE VARCHAR2(12),
EMAIL VARCHAR(50) NOT NULL,
POSITION VARCHAR2(30),
CONSTRAINT CS_STAFF_ID_PK PRIMARY KEY (STAFF_ID),
CONSTRAINT CS_GEN_CK CHECK (GEN IN ('M', 'F', 'O'))
);

--Create table COMM_USER
CREATE TABLE COMM_USER
(USER_ID NUMBER(6),
FNAME VARCHAR2(50)NOT NULL,
LNAME VARCHAR2(50)NOT NULL,
BIRTH DATE,
GEN CHAR(2),
ADDRESS VARCHAR2(50),
PHONE VARCHAR2(12),
EMAIL VARCHAR(50) NOT NULL,
CONSTRAINT CU_UID_PK PRIMARY KEY (USER_ID),
CONSTRAINT CU_GEN_CK CHECK (GEN IN ('M', 'F', 'O'))
);

--Create table COMM_PROGRAM
CREATE TABLE COMM_PROGRAM
(PROGRAM_ID VARCHAR2(6),
PROGRAM_NAME VARCHAR2(100),
PROGRAM_TYPE VARCHAR2(100),
PROGRAM_DURATION VARCHAR2(10),
PROGRAM_COOP CHAR(1),
COLLEGE_ID NUMBER(5),
CONSTRAINT CP_PID_PK PRIMARY KEY (PROGRAM_ID),
CONSTRAINT CP_COLLEGE_ID_FK FOREIGN KEY (COLLEGE_ID) REFERENCES COMM_COLLEGE (COLLEGE_ID),
CONSTRAINT CP_TYPE_CK CHECK (PROGRAM_TYPE IN ('CERTIFICATE', 'DIPLOMA', 'DEGREE', 'GRADUATE_CERTIFICATE')),
CONSTRAINT CP_DURATION_CK CHECK (PROGRAM_DURATION IN ('1-YEAR', '2-YEAR', '3-YEAR', '4-YEAR')),
CONSTRAINT CP_COOP_CK CHECK (PROGRAM_COOP IN ('Y', 'N'))
);

--Create table COMM_COURSE
CREATE TABLE COMM_COURSE
(COURSE_ID VARCHAR2(5),
PROGRAM_ID VARCHAR2(6),
COURSE_NAME VARCHAR2(50),
DESCRIPTION VARCHAR2(200),
COURSE_CREDIT NUMBER(2,1),
COURSE_LEVEL VARCHAR2(10),
CONSTRAINT CC_COURSE_ID_PK PRIMARY KEY(COURSE_ID),
CONSTRAINT CC_PROGRAM_ID_FK FOREIGN KEY (PROGRAM_ID) REFERENCES COMM_PROGRAM (PROGRAM_ID),
CONSTRAINT CC_LEVEL_CK CHECK (COURSE_LEVEL IN ('HIGH', 'NORMAL', 'LOW'))
);

--Create table COMM_APPLICATION
CREATE TABLE COMM_APPLICATION
(APPLICATION_ID VARCHAR2(14),
USER_ID NUMBER(6),
APPLICATION_DATE DATE,
CONSTRAINT CA_APPLICA_ID_PK PRIMARY KEY (APPLICATION_ID),
CONSTRAINT CA_UID_FK FOREIGN KEY (USER_ID) REFERENCES COMM_USER (USER_ID)
);

--Create table COMM_SER_REQUEST
CREATE TABLE COMM_SER_REQUEST
(REQUEST_ID VARCHAR2(10),
REQUEST_TYPE VARCHAR2(20),
REQUEST_DATE DATE,
DESCRIPTION VARCHAR(200),
REQUEST_STATUS VARCHAR2(15),
REQUESTOR_ID NUMBER(6),
CONSTRAINT CSR_SR_ID_PK PRIMARY KEY (REQUEST_ID),
CONSTRAINT CSR_SR_TYPE_CK CHECK(REQUEST_TYPE IN ('ADMISSION', 'REGISTRATION', 'ACCOUNT-RALATED', 'PAYMENT', 'OTHERS')),
CONSTRAINT CSR_SR_STATUS_CK CHECK(REQUEST_STATUS IN ('IN-PROGRESS', 'HANDLED', 'CANCEL', 'SUBMITTED')),
CONSTRAINT CSR_SROR_ID_FK FOREIGN KEY (REQUESTOR_ID) REFERENCES COMM_USER (USER_ID)
);

--Create table COMM_ADMISSION
CREATE TABLE COMM_ADMISSION
(ADMISSION_ID  VARCHAR2(14),
APPLICATION_ID VARCHAR2(14),
PROGRAM_ID VARCHAR2(6),
APPLICANT_ID NUMBER(6),
ADMISSION_DATE DATE,
ADMISSION_STATUS VARCHAR2(10),
CONSTRAINT CA_ADMIS_ID_PK PRIMARY KEY (ADMISSION_ID),
CONSTRAINT CA_APPLICA_ID_FK FOREIGN KEY (APPLICATION_ID) REFERENCES COMM_APPLICATION (APPLICATION_ID),
CONSTRAINT CA_PROGRAM_ID_FK FOREIGN KEY (PROGRAM_ID) REFERENCES COMM_PROGRAM (PROGRAM_ID),
CONSTRAINT CA_APPCANT_ID_FK FOREIGN KEY (APPLICANT_ID) REFERENCES COMM_USER (USER_ID),
CONSTRAINT CA_STATUS_CK CHECK (ADMISSION_STATUS IN ('ACCEPTED', 'REJECTED', 'SUMBITTED', 'CANCELED'))
);

--Create table COMM_PAYMENT
CREATE TABLE COMM_PAYMENT
(PAYMENT_ID VARCHAR2(10),
USER_ID NUMBER(6),
PROGRAM_ID VARCHAR2(6),
PAYMENT_ACCOUNT VARCHAR2(19),
PAYMENT_DATE DATE,
PAYMENT_STATUS VARCHAR2(15),
CONSTRAINT CP_PAYMENT_ID_PK PRIMARY KEY (PAYMENT_ID),
CONSTRAINT CP_UID_FK FOREIGN KEY (USER_ID) REFERENCES COMM_USER (USER_ID),
CONSTRAINT CP_PROGRAM_ID_FK FOREIGN KEY (PROGRAM_ID) REFERENCES COMM_PROGRAM (PROGRAM_ID),
CONSTRAINT CP_STATUS_CK CHECK( PAYMENT_STATUS IN ('IN-PROGRESS', 'HANDLED', 'CANCEL', 'SUBMITTED'))
);

--Create table COMM_REQUEST_HANDLE
CREATE TABLE COMM_REQUEST_HANDLE
(HANDLE_ID VARCHAR2(12),
REQUEST_ID VARCHAR2(10),
HANDLE_DATE DATE,
HANDLE_STATUS VARCHAR2(15),
HANDLER_ID NUMBER(6),
CONSTRAINT CSH_HANDLE_ID_PK PRIMARY KEY (HANDLE_ID),
CONSTRAINT CSH_SR_ID_FK FOREIGN KEY (REQUEST_ID) REFERENCES COMM_SER_REQUEST (REQUEST_ID),
CONSTRAINT CSH_HANDLERID_FK FOREIGN KEY (HANDLER_ID) REFERENCES COMM_STAFF (STAFF_ID),
CONSTRAINT CSH_STATUS_CK CHECK(HANDLE_STATUS IN ('IN-PROGRESS', 'HANDLED'))
);